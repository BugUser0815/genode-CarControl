#
# Build
#
set use_usb_driver [expr [have_spec omap4] || [have_spec arndale] || [have_spec rpi]]
set use_nic_driver [expr !$use_usb_driver && ![have_spec imx53] && ![have_spec hw_odroid_xu] && ![have_spec linux] && ![have_spec hw_wand_quad]]

if {[expr !$use_usb_driver && !$use_nic_driver]} {
	puts "\n Run script is not supported on this platform. \n"; exit 0 }
	  
set build_components { core 
					   init 
					   server/usb_terminal 
					   drivers/usb 
					   drivers/gpio 
					   drivers/timer 
					   drivers/nic                        
					   app/mbl_client}

#lappend_if $use_usb_driver              build_components drivers/usb
#lappend_if [have_spec gpio]             build_components drivers/gpio

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config {
<config>
	<parent-provides>
		<service name="CAP"/>
		<service name="LOG"/>
		<service name="RM"/>
		<service name="SIGNAL"/>

        <service name="RAM"/>
        <service name="PD"/>
        <service name="CPU"/>

		<!-- some timer implementations need kernel info pages -->
		<service name="ROM"/>

		<!-- hardware-based timers need I/O resources -->
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="IRQ"/>
	</parent-provides>

	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>


	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
        <config/>
	</start>


	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>

    <start name="usb_drv">
        <resource name="RAM" quantum="64M"/>
        <provides>
                <service name="Nic"/>
                <service name="Usb"/>
        </provides>
        <config uhci="yes" ehci="yes" xhci="yes">
            <nic mac="0A:03:00:00:00:02"/>
	    <raw>
		<policy label="usb_terminal -> usb_serial" vendor_id="0x67b" product_id="0x2303"/>
            </raw>
        </config>
    </start>

    <start name="usb_terminal">
        <resource name="RAM" quantum="2M"/>
        <provides><service name="Terminal"/></provides>
    </start>

	<start name="mbl_client">
		<resource name="RAM" quantum="5M"/>
		<config>
			<network dhcp="yes" />
			<mosquitto ip-address="10.200.32.75"/>
        </config>
	</start>
}

append_platform_drv_config

append config {
  </config>
}

install_config $config


#
# Boot image
#

set boot_modules { core 
			 	   init 
				   mbl_client 
				   timer 
				   usb_terminal 
				   libmosquitto.lib.so 
				   libc.lib.so 
				   stdcxx.lib.so 
				   lwip.lib.so 
				   libssl.lib.so 
				   libcrypto.lib.so 
				   ld.lib.so 
				   libm.lib.so 
				   pthread.lib.so }

# platform-specific modules
lappend_if $use_usb_driver              boot_modules usb_drv
lappend_if $use_nic_driver              boot_modules nic_drv
lappend_if [have_spec gpio]             boot_modules gpio_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules

