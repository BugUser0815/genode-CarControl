set use_usb_driver [expr [have_spec omap4] || [have_spec arndale] || [have_spec rpi]]
set use_nic_driver [expr !$use_usb_driver && ![have_spec imx53] && ![have_spec hw_odroid_xu] && ![have_spec linux] && ![have_spec hw_wand_quad]]

if {[expr !$use_usb_driver && !$use_nic_driver]} {
	puts "\n Run script is not supported on this platform. \n"; exit 0 }

#
# Build
#

set build_components {
	core init
	drivers/timer drivers/nic
	server/nic_bridge 
	app/acc
	app/servo_adapter
}

lappend_if $use_usb_driver              build_components drivers/usb
lappend_if [have_spec gpio]             build_components drivers/gpio

source ${genode_dir}/repos/base/run/platform_drv.inc
append_platform_drv_build_components

build $build_components

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Timer"/> </provides>
	</start>
	<start name="nic_bridge">
		<resource name="RAM" quantum="24M"/>
		<provides><service name="Nic"/></provides>
		<route>
			<service name="Nic"> <child name="usb_drv"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config/>
	</start>
	<start name="servo_adapter">
		<resource name="RAM" quantum="5M"/>
		<route>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<mosquitto ip-address="10.200.32.75" />
			<network dhcp="yes" />
		</config>
	</start>
	<start name="acc">
		<resource name="RAM" quantum="5M"/>
		<route>
			<service name="Nic"> <child name="nic_bridge"/> </service>
			<any-service> <parent/> <any-child/> </any-service>
		</route>
		<config>
			<mosquitto ip-address="10.200.32.75" />
			<network dhcp="yes" />
		</config>
	</start>
}

append_if [have_spec gpio] config {
	<start name="gpio_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Gpio"/></provides>
		<config/>
	</start>}

append_if $use_usb_driver config {
	<start name="usb_drv">
		<resource name="RAM" quantum="25M"/>
		<provides>
			<service name="Nic"/>
		</provides>
		<config ehci="yes">
			<nic mac="0A:02:00:00:00:03" />
		</config>
	</start>}

append_platform_drv_config

append_if $use_nic_driver config {
	<start name="nic_drv">
		<resource name="RAM" quantum="4M"/>
		<provides><service name="Nic"/></provides>
	</start>}

append config {
</config>
}

install_config $config

#
# Boot modules
#

# generic modules
set boot_modules {
	core init timer
	nic_bridge 
	ld.lib.so libc.lib.so lwip.lib.so libm.lib.so libmosquitto.lib.so pthread.lib.so stdcxx.lib.so libssl.lib.so libcrypto.lib.so
	servo_adapter acc
}

# platform-specific modules
lappend_if $use_usb_driver              boot_modules usb_drv
lappend_if $use_nic_driver              boot_modules nic_drv
lappend_if [have_spec gpio]             boot_modules gpio_drv

append_platform_drv_boot_modules

build_boot_image $boot_modules
