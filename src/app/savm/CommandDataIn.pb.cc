// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommandDataIn.proto

#include "CommandDataIn.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace protobuf {
class CommandDataInDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CommandDataIn>
      _instance;
} _CommandDataIn_default_instance_;
}  // namespace protobuf
namespace protobuf_CommandDataIn_2eproto {
void InitDefaultsCommandDataInImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::protobuf::_CommandDataIn_default_instance_;
    new (ptr) ::protobuf::CommandDataIn();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::protobuf::CommandDataIn::InitAsDefaultInstance();
}

void InitDefaultsCommandDataIn() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommandDataInImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, steer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, accel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, brakefl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, brakefr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, brakerl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, brakerr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::protobuf::CommandDataIn, gear_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::protobuf::CommandDataIn)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::protobuf::_CommandDataIn_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CommandDataIn.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023CommandDataIn.proto\022\010protobuf\"\177\n\rComma"
      "ndDataIn\022\r\n\005steer\030\001 \001(\002\022\r\n\005accel\030\002 \001(\002\022\017"
      "\n\007brakeFL\030\003 \001(\002\022\017\n\007brakeFR\030\004 \001(\002\022\017\n\007brak"
      "eRL\030\005 \001(\002\022\017\n\007brakeRR\030\006 \001(\002\022\014\n\004gear\030\007 \001(\005"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 168);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CommandDataIn.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_CommandDataIn_2eproto
namespace protobuf {

// ===================================================================

void CommandDataIn::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CommandDataIn::kSteerFieldNumber;
const int CommandDataIn::kAccelFieldNumber;
const int CommandDataIn::kBrakeFLFieldNumber;
const int CommandDataIn::kBrakeFRFieldNumber;
const int CommandDataIn::kBrakeRLFieldNumber;
const int CommandDataIn::kBrakeRRFieldNumber;
const int CommandDataIn::kGearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CommandDataIn::CommandDataIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CommandDataIn_2eproto::InitDefaultsCommandDataIn();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:protobuf.CommandDataIn)
}
CommandDataIn::CommandDataIn(const CommandDataIn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steer_, &from.steer_,
    static_cast<size_t>(reinterpret_cast<char*>(&gear_) -
    reinterpret_cast<char*>(&steer_)) + sizeof(gear_));
  // @@protoc_insertion_point(copy_constructor:protobuf.CommandDataIn)
}

void CommandDataIn::SharedCtor() {
  ::memset(&steer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gear_) -
      reinterpret_cast<char*>(&steer_)) + sizeof(gear_));
  _cached_size_ = 0;
}

CommandDataIn::~CommandDataIn() {
  // @@protoc_insertion_point(destructor:protobuf.CommandDataIn)
  SharedDtor();
}

void CommandDataIn::SharedDtor() {
}

void CommandDataIn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CommandDataIn::descriptor() {
  ::protobuf_CommandDataIn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CommandDataIn_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CommandDataIn& CommandDataIn::default_instance() {
  ::protobuf_CommandDataIn_2eproto::InitDefaultsCommandDataIn();
  return *internal_default_instance();
}

CommandDataIn* CommandDataIn::New(::google::protobuf::Arena* arena) const {
  CommandDataIn* n = new CommandDataIn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CommandDataIn::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.CommandDataIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&steer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gear_) -
      reinterpret_cast<char*>(&steer_)) + sizeof(gear_));
  _internal_metadata_.Clear();
}

bool CommandDataIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:protobuf.CommandDataIn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float steer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &steer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float accel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &accel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float brakeFL = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &brakefl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float brakeFR = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &brakefr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float brakeRL = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &brakerl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float brakeRR = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &brakerr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gear = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gear_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protobuf.CommandDataIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protobuf.CommandDataIn)
  return false;
#undef DO_
}

void CommandDataIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protobuf.CommandDataIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float steer = 1;
  if (this->steer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->steer(), output);
  }

  // float accel = 2;
  if (this->accel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->accel(), output);
  }

  // float brakeFL = 3;
  if (this->brakefl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->brakefl(), output);
  }

  // float brakeFR = 4;
  if (this->brakefr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->brakefr(), output);
  }

  // float brakeRL = 5;
  if (this->brakerl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->brakerl(), output);
  }

  // float brakeRR = 6;
  if (this->brakerr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->brakerr(), output);
  }

  // int32 gear = 7;
  if (this->gear() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gear(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:protobuf.CommandDataIn)
}

::google::protobuf::uint8* CommandDataIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.CommandDataIn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float steer = 1;
  if (this->steer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->steer(), target);
  }

  // float accel = 2;
  if (this->accel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->accel(), target);
  }

  // float brakeFL = 3;
  if (this->brakefl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->brakefl(), target);
  }

  // float brakeFR = 4;
  if (this->brakefr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->brakefr(), target);
  }

  // float brakeRL = 5;
  if (this->brakerl() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->brakerl(), target);
  }

  // float brakeRR = 6;
  if (this->brakerr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->brakerr(), target);
  }

  // int32 gear = 7;
  if (this->gear() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gear(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.CommandDataIn)
  return target;
}

size_t CommandDataIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:protobuf.CommandDataIn)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float steer = 1;
  if (this->steer() != 0) {
    total_size += 1 + 4;
  }

  // float accel = 2;
  if (this->accel() != 0) {
    total_size += 1 + 4;
  }

  // float brakeFL = 3;
  if (this->brakefl() != 0) {
    total_size += 1 + 4;
  }

  // float brakeFR = 4;
  if (this->brakefr() != 0) {
    total_size += 1 + 4;
  }

  // float brakeRL = 5;
  if (this->brakerl() != 0) {
    total_size += 1 + 4;
  }

  // float brakeRR = 6;
  if (this->brakerr() != 0) {
    total_size += 1 + 4;
  }

  // int32 gear = 7;
  if (this->gear() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gear());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CommandDataIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:protobuf.CommandDataIn)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandDataIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CommandDataIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:protobuf.CommandDataIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:protobuf.CommandDataIn)
    MergeFrom(*source);
  }
}

void CommandDataIn::MergeFrom(const CommandDataIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:protobuf.CommandDataIn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.steer() != 0) {
    set_steer(from.steer());
  }
  if (from.accel() != 0) {
    set_accel(from.accel());
  }
  if (from.brakefl() != 0) {
    set_brakefl(from.brakefl());
  }
  if (from.brakefr() != 0) {
    set_brakefr(from.brakefr());
  }
  if (from.brakerl() != 0) {
    set_brakerl(from.brakerl());
  }
  if (from.brakerr() != 0) {
    set_brakerr(from.brakerr());
  }
  if (from.gear() != 0) {
    set_gear(from.gear());
  }
}

void CommandDataIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:protobuf.CommandDataIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandDataIn::CopyFrom(const CommandDataIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.CommandDataIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandDataIn::IsInitialized() const {
  return true;
}

void CommandDataIn::Swap(CommandDataIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CommandDataIn::InternalSwap(CommandDataIn* other) {
  using std::swap;
  swap(steer_, other->steer_);
  swap(accel_, other->accel_);
  swap(brakefl_, other->brakefl_);
  swap(brakefr_, other->brakefr_);
  swap(brakerl_, other->brakerl_);
  swap(brakerr_, other->brakerr_);
  swap(gear_, other->gear_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CommandDataIn::GetMetadata() const {
  protobuf_CommandDataIn_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CommandDataIn_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf

// @@protoc_insertion_point(global_scope)
